{"./":{"url":"./","title":"产品介绍","keywords":"","body":"火信 什么是火信 火信是一套即时通讯组件，能够更加容易地赋予客户IM能力，使客户可以快速的在自有产品上添加聊天功能，或者基于火信开发出即时通讯软件。火信开发者都是有十多年IM行业从业经验，曾在国内多家知名即时通讯软件担任架构师，具有丰富的理论与实践。火信拥有先进的IM架构，具有极高的性能和安全性。 火信的目标是什么 一直以来给自己的产品加上IM能力都是一件比较困难的事情，要么是架构落后性能不好（XMPP），要么是费用贵业务受制于人安全有隐忧（云通讯公司）。我们的目标是提供一个免费可控高效易用的IM组件，让拥有IM能力不再是一种奢望，让沟通不再是难事。 我们提供的产品 火信提供社区版服务器软件和商业版服务器软件，客户端开源全部源码（音视频SDK不开源，买的商业源码，无法二次分发）。客户需要把服务器软件到自己服务器，然后集成SDK到客户APP。我们提供的Demo应用也可以直接使用。 火信的技术特点 火信使用了微信Mars连接库，序列化使用protobuf，协议使用MQTT修改的私有协议，借鉴了微软ActiveSync的思路。做到不丢消息，不重复，完美地支持多端。另外针对安全性做了仔细的设计，链路层全程加密，本地数据库加密。提供了UI库，大大减少开发者的工作量。 费用 社区版服务器软件免费使用，客户端SDK和demo使用MIT协议开源，您可以免费使用火信。另外服务器提供专业版，提供部分增强功能和更多服务支持，用户可选。 2018 © wildfirechat.cn 京ICP备18060403号-1 all right reserved，powered by Gitbook该文件修订时间： 2019-01-20 23:13:15 "},"quick_start/":{"url":"quick_start/","title":"快速开始","keywords":"","body":"快速开始 您可以直接下载安装火信的Android或iOS平台的DEMO来体验火信，也可以自己部署服务器软件和客户端Demo源码打包来体验火信功能。 服务器快速部署 Android编译 iOS快速编译 2018 © wildfirechat.cn 京ICP备18060403号-1 all right reserved，powered by Gitbook该文件修订时间： 2019-01-20 22:16:46 "},"quick_start/server.html":{"url":"quick_start/server.html","title":"服务器部署","keywords":"","body":"服务器部署 服务器提供社区版本和Demo服务版本，从这里下载。其中wildfirechat是服务器软件，app是demo应用软件。 环境需求 Windows/Linux/MacOS都可以，需要JRE1.8以上，需要网络环境。如果没有外网，也可以在局域网内体验。需要开通1883、80和8888端口。 火信服务器的部署 配置修改 wildfirechat软件下载解压后，修改/config/moquette.conf文件，修改http_port为80，修改server.ip为服务器ip地址。 这里有个限制http_port必须为80端口，如果使用其它端口，在使用七牛文件服务器时，发送媒体消息会失败 运行 在mac/linux系统下，执行sh ./bin/moquette.sh;在windows系统下，执行bin\\moquette.bat。等待10秒钟后，在浏览器中输入http://${服务器的IP}/api/version，查看版本信息。注意一定到在bin的同级目录下执行，不要到bin内执行 Demo应用服务器的部署 配置修改 app软件下载解压后，修改/config/sms.properties文件，设置superCode为66666 运行 执行java -jar app-xxxx.jar。 2018 © wildfirechat.cn 京ICP备18060403号-1 all right reserved，powered by Gitbook该文件修订时间： 2019-01-20 23:00:07 "},"quick_start/android.html":{"url":"quick_start/android.html","title":"安卓编译","keywords":"","body":"Android编译 部署完服务后就可以开始客户端的编译。客户端提供源码，从这里下载最新的源码。 修改配置 找到Config.java文件，修改IM_SERVER_HOST和IM_SERVER_HOST为你的服务器地址，比如192.168.1.100。修改IM_SERVER_PORT为80, 修改APP_SERVER_PORT为8888。 运行 编译运行，填入您的手机号码，验证码填写服务器部署时指定的superCode 66666。 2018 © wildfirechat.cn 京ICP备18060403号-1 all right reserved，powered by Gitbook该文件修订时间： 2019-01-20 22:57:59 "},"quick_start/iOS.html":{"url":"quick_start/iOS.html","title":"iOS编译","keywords":"","body":"iOS编译 部署完服务后就可以开始客户端的编译。客户端提供源码，从这里下载最新的源码。 修改配置 找到config.m文件，修改IM_SERVER_HOST和IM_SERVER_HOST为你的服务器地址，比如192.168.1.100。修改IM_SERVER_PORT为80, 修改APP_SERVER_PORT为8888。 运行 编译运行，填入您的手机号码，验证码填写服务器部署时指定的superCode 66666。 2018 © wildfirechat.cn 京ICP备18060403号-1 all right reserved，powered by Gitbook该文件修订时间： 2019-01-20 22:58:05 "},"architecture/":{"url":"architecture/","title":"系统架构","keywords":"","body":"系统架构 火信除了提供基础IM功能外，还提供群组托管/用户信息托管/好友关系托管等功能，其中用户信息托管和好友关系托管为可选功能，客户可以自己处理用户信息和好友关系，仅仅使用im和群组托管能力。也可以把用户信息和好友关系导入到火信中去，SDK和UI更容易使用。 SDK SDK内嵌于应用内，只需要调用connect，传入用户Id和token，SDK会自动做好连接/重连、消息同步、群组关系同步、用户信息同步、好友关系同步等。移动客户端和PC客户端使用微信Mars和自定义协议实现，使用C++实现具有跨平台功能。Web客户端使用自定义协议和websocket实现。IMLib是SDK的接口层，负责mars和协议在不同平台的wrapper。 目前仅实现了移动端平台，mac/windows/web平台暂未实现。其中mac/windows平台的实现较为容易，会很快提供SDK。 应用服务器 应用服务器需要处理用户注册/用户登陆等业务。如果使用用户信息托管切包含用户密码，则可以去火信服务器登陆换取token。如果没有使用用户信息托管或没有托管密码，则登陆时，应用服务器需要去火信服务器换取token。 火信服务器 负责IM业务的处理，负责群组业务的处理，负责用户信息于好友关系的处理。 应用客户端 应用客户端，使用sdk，负责im的UI展示。火信提供一个简单的demo，可以作为一个聊天客户端直接使用，也可以移植聊天相关的UI到客户应用中去。 流程图 登陆 登陆 注册用户 托管用户信息 不托管用户信息 注册时不用同步用户信息到火信服务器，获取token不依赖必须存在用户信息。 2018 © wildfirechat.cn 京ICP备18060403号-1 all right reserved，powered by Gitbook该文件修订时间： 2019-01-20 22:21:05 "},"base_knowledge/":{"url":"base_knowledge/","title":"基础知识","keywords":"","body":"基础知识 SDK与Demo 用户 SDK的功能 连接 会话 消息 消息内容 消息负载 存储与同步 离线消息 群组 聊天室 2018 © wildfirechat.cn 京ICP备18060403号-1 all right reserved，powered by Gitbook该文件修订时间： 2018-10-14 17:32:50 "},"base_knowledge/sdk_demo.html":{"url":"base_knowledge/sdk_demo.html","title":"SDK与Demo的关系","keywords":"","body":"SDK与Demo的关系 SDK SDK分为ChatClient和ChatUIKit，其中ChatClient提供IM能力，另外附加群组关系托管，用户信息托管和好友关系托管，只提供能力，不包括UI界面。ChatUIKit提供常用的UI界面，客户可以直接使用ChatUIKit的UI来进行二次开发，也可以只使用ChatClient自己来开发UI。 Demo Demo是使用了ChatUIKit的演示。演示如何集成我们的SDK 我们提供的支持 SDK和Demo全部开源，都采用MIT版权。但我们对SDK和Demo提供不同的技术支持。 对于SDK的ChatClient，我们提供完全的维护工作，建议客户不要修改这个SDK，如果有bug请提交issue，如果缺少IM的某些功能导致应用无法完成某项功能，也可以提issue给我们。 对于ChatUIKit和Demo，建议用户自己修改，如果有issue可以给我们提Pull Request。 2018 © wildfirechat.cn 京ICP备18060403号-1 all right reserved，powered by Gitbook该文件修订时间： 2019-01-20 22:27:04 "},"base_knowledge/user.html":{"url":"base_knowledge/user.html","title":"用户","keywords":"","body":"用户 用户的基本属性 用户拥有如下三个属性，userId、name、displayName。 userId 用户在系统中的唯一ID，一般是一个字符串，具有系统中唯一性，用户在使用过程中无法看到，不可以修改。火信中用户ID最大长度是64字节。 name 有人也称为loginName或accountName，一般是用来登陆时填写的用户名，具有系统中的唯一性，一般不可以修改。火信中name最大长度也是64字节 displayName 有人也称为nickName，一般情况下用户可以随意修改，不要求唯一性。displayName最大长度也是64字节。 其它的一些属性，比如头像，号码，地址等，不容易引起误解这里就不做解释了。另外用户提供有extra字段，客户可以自定义使用。 登陆与连接 登陆与连接是两个不同的概念。登陆是指应用认证用户的一个过程，登陆成功后，应用可以识别当前用户，并授权用户对应的权限。连接这里指的是IM的长链接建立，是发生在登陆之后，需要保持与IM服务器长链接，以便发送消息或者接收消息推送。 用户Token 用户Token，在不引起歧义的情况下称为token。token是用户身份验证的凭证,在IM连接之前，需要先换取token，一般是在登陆成功时，由应用服务器返回token。token需要严格保密。 连接 SDK仅需要用户ID和token进行连接，在IM系统核心处理部分，只用到用户ID，不需要系统中一定有这个用户，这样客户就可以选择是否托管用户信息。 2018 © wildfirechat.cn 京ICP备18060403号-1 all right reserved，powered by Gitbook该文件修订时间： 2019-01-20 22:29:02 "},"base_knowledge/sdk_abilities.html":{"url":"base_knowledge/sdk_abilities.html","title":"SDK的功能","keywords":"","body":"SDK的功能 ChatClient 连接/断开连接/连接状态回调 发送消息/接收消息回调 获取会话列表/获取会话/清除会话未读数等会话操作 获取消息列表/获取消息/更新消息/删除消息等消息操作 获取用户信息/搜索用户等用户操作 添加好友请求/接收好友请求/获取好友列表/删除好友等好友操作 创建群组/添加成员/移除成员/解散群组等群组操作 个人属性设置相关 加入聊天室/退出聊天室/获取聊天室信息等聊天室相关操作 ChatUIKit 会话列表界面 会话界面 消息展示 联系人展示 好友关系处理 个人用户信息修改 群组信息展示 ... 2018 © wildfirechat.cn 京ICP备18060403号-1 all right reserved，powered by Gitbook该文件修订时间： 2019-01-20 22:31:51 "},"base_knowledge/connect.html":{"url":"base_knowledge/connect.html","title":"连接","keywords":"","body":"连接 连接 连接之前需要先获取token。调用connect之后，SDK会自动处理断网重连/网络切换/前后台切换等逻辑。应用只需要实现网络状态的回调，反映出当前的状态即可。断开连接需要clearSession参数，true会清理掉session，应用不会收到推送。false会保留当前session，应用会收到推送。 连接流程请参考登陆 异步调用与回调 connect函数没有回调函数，只能通过连接回调来判断连接状态。调用connect后，数据库立即可用。连接状态一般情况下只需要展示给用户即可，但有部分状态需要干预，比如token过期或者错误，用户被封禁等。 2018 © wildfirechat.cn 京ICP备18060403号-1 all right reserved，powered by Gitbook该文件修订时间： 2018-10-14 17:32:50 "},"base_knowledge/conversation.html":{"url":"base_knowledge/conversation.html","title":"会话","keywords":"","body":"会话 会话 会话(Conversation)是指与特定对象聊天消息(Message)的集合，概念与微信中的会话一致，一条一条显示在消息界面中。会话具有如下三个属性 会话类型(Conversation_Type)： Single类型，一对一的会话类型。聊天双方分别为两个用户和个体。 Group类型，群组会话类型，发送在这个会话的消息会分发到所有的群成员。 Chatroom类型，聊天室会话类型，发送到这个会话的消息会分发到所有的聊天室成员。与群组的区别在于群组是有离线消息和推送，聊天室的关系是临时的，退出来就不会收到消息。 会话目标(Target)： 跟会话类型不同而不同，Single类型时，目标为用户Id；Group类型时，目标为群Id；Chatroom类型时，目标为聊天室Id。 会话线路(Line)： 会话线路可以更加方便的过滤会话。比如同一个app中不同部门可以使用不同的line区分。或者可以设计不同的场景使用不同的line等。 除此之外，还有别的一些属性比如未读数/最后一条消息/更新时间/是否置顶等属性。详情请在客户端源码中查看Conversation和ConversationInfo对象 会话/消息/消息内容的关系 一个会话会拥有多个消息，每个消息都属于一个会话；每个消息都拥有一个消息内容，消息内容可以有多种形式，比如文本消息内容、图片消息内容等内置消息类型，另外支持自定义消息内容；消息内容在存储或者网络传输中要Encode为消息负载，从数据库中读取或者网络收到消息负载需要Decode为具体的消息内容。 2018 © wildfirechat.cn 京ICP备18060403号-1 all right reserved，powered by Gitbook该文件修订时间： 2018-10-14 17:32:50 "},"base_knowledge/message.html":{"url":"base_knowledge/message.html","title":"消息","keywords":"","body":"消息 消息定义为message对象。消息与会话的关系是一对多，一条消息对应于一个会话，一个会话可以有多条消息。它具有如下属性： messageId 消息ID，如果消息内容是存储类型的，messageId对应于本地数据库中的自增id，同一条消息在发送方和接收方都可能是不同的，甚至在多端的情况下也不能保证相同。如果消息内容是非存储的，messageId为0. messageUid 消息唯一ID，由服务器分配的全局唯一ID。消息只有发送成功才会拥有唯一ID。 conversation 所属的会话 fromUser 发送者 direction 消息方向，是发送的还是接收的。 status 消息状态，分为如下值 * Sending * Sent * Send_Failure * Mentioned * AllMentioned * Unread * Readed * Played serverTime 消息在服务器处理的时间戳 content 消息的内容，消息内容可以是多种格式，比如图片/文本/语音/地理位置等。火信支持自定义消息内容类型，可以任意定义消息内容来服务您的业务需求。 2018 © wildfirechat.cn 京ICP备18060403号-1 all right reserved，powered by Gitbook该文件修订时间： 2018-10-14 17:32:50 "},"base_knowledge/message_content.html":{"url":"base_knowledge/message_content.html","title":"消息内容","keywords":"","body":"消息内容 消息内容(Message Content)是消息中最重要的部分，在网络传输中，消息内容会转化为消息负载(Message Payload)，接收到消息负载后会转化为消息内容。消息内容有一个共同的抽象基类MessageContent。各种消息类型都派生与此基类。此外客户也可以自定义消息内容，继承基类，然后调用sdk的注册消息函数即可（注意必须在连接之前注册）。 Android： public abstract class MessageContent implements Parcelable { public abstract MessagePayload encode(); public abstract void decode(MessagePayload payload); public abstract String digest(); public int getType() { ContentTag tag = getClass().getAnnotation(ContentTag.class); if(tag != null) { return tag.type(); } return -1; } public PersistFlag getPersistFlag() { ContentTag tag = getClass().getAnnotation(ContentTag.class); if(tag != null) { return tag.flag(); } return PersistFlag.No_Persist; } } iOS： @protocol WFCCMessageContent /** 消息编码 @return 消息的持久化内容 */ - (WFCCMessagePayload *)encode; /** 消息解码 @param payload 消息的持久化内容 */ - (void)decode:(WFCCMessagePayload *)payload; /** 消息类型，必须全局唯一。1000及以下为系统内置类型，自定义消息需要使用1000以上。 @return 消息类型的唯一值 */ + (int)getContentType; /** 消息的存储策略 @return 存储策略 */ + (int)getContentFlags; /** 消息的简短信息 @return 消息的简短信息，主要用于通知提示和会话列表等需要简略信息的地方。 */ - (NSString *)digest; @end 2018 © wildfirechat.cn 京ICP备18060403号-1 all right reserved，powered by Gitbook该文件修订时间： 2018-10-14 17:32:50 "},"base_knowledge/message_payload.html":{"url":"base_knowledge/message_payload.html","title":"消息负载","keywords":"","body":"消息负载 消息内容需要在网络上传输或本地存储，而消息内容是复杂多变的。因此消息发送过程中先encode为消息负载；消息接收后由消息负载decode为对应的消息内容。在数据库从存取也是如此。 public class MessagePayload { public int contentType; public String searchableContent; public String pushContent; public String content; public byte[] binaryContent; public int mentionedType; public List mentionedTargets; public MessageContentMediaType mediaType; public String remoteMediaUrl; //前面的属性都会在网络发送，下面的属性只在本地存储 public String localMediaPath; //前面的属性都会在网络发送，下面的属性只在本地存储 public String localContent; } contentType 消息内容类型，根据该类型decode成对应的消息内容 searchableContent 可搜索内容，用于本地搜索或者在服务器搜索 pushContent 对于自定义消息，如果需要推送需要encode此字段。推送内容会使用此字段。 mentionedType 提醒类型。0 不提醒；1 对mentionedTargets里的user进行提醒；2 对群内所有人提醒。 mediaType 媒体类型，媒体消息内容使用，用来区别在服务器端文件对应的bucket。 local** 本地使用内容，不会在网络发送。比如媒体文件下载下来需要记录路径，或者本地处理过需要标记一些内容等。 2018 © wildfirechat.cn 京ICP备18060403号-1 all right reserved，powered by Gitbook该文件修订时间： 2018-10-14 17:32:50 "},"base_knowledge/storage_and_sync.html":{"url":"base_knowledge/storage_and_sync.html","title":"存储与同步","keywords":"","body":"存储与同步 除了Web端以外的客户端内置有Sqlite数据库，基本上所有的信息都会有缓存。不同类型的数据缓存是有所区别的。 消息 消息是IM中最主要的数据，消息的收取是协议栈自动处理，消息收取后自动存储在数据库中。因此从数据库中读取消息和会话是当时最新的状态。此外需要监听新消息回调，收到新消息后重新从数据库中读取或者更新之前读取的数据即可。 其它类型信息 群组信息，群成员信息，用户信息，好友信息等，这类信息变更没有推送功能，因此需要在合适的时机去服务器刷新。这类信息的获取一般都是带有一个从服务器强制刷新参数refresh。数据不存在或者refresh为true时，协议栈会强制去网络刷新，如果数据有变动会发出通知。在应用中需要考虑信息取回来是空的可能，另外需要监听对应信息刷新事件。 获取用户信息接口： public UserInfo getUserInfo(String userId, boolean refresh); 用户信息刷新通知： public static final String ACTION_ON_USERINFO_UPDATED = \"cn.wildfirechat.client.on_userinfo_updated\"; 2018 © wildfirechat.cn 京ICP备18060403号-1 all right reserved，powered by Gitbook该文件修订时间： 2018-10-14 17:32:50 "},"base_knowledge/offline_message.html":{"url":"base_knowledge/offline_message.html","title":"离线消息","keywords":"","body":"离线消息 离线消息是指当用户设备不在线，发送给该用户的消息被缓存到服务器，当设备上线后，消息再推送给用户。 火信会缓存每个用户1000条消息ID，因此如果用户有超过1000条消息没有接收，那么就只能收下来最后1000条消息，之前的消息将不会收取下来。 所有的消息都会储存下来，客户端有接口可以获取服务器端当前用户指定会话的某些消息唯一ID某些范围的消息。比如可以获取某个MessageUid之前的50条消息。 为了支持多端，消息收下来后服务器端也不会删除，因此应用卸载重装或者登陆新用户，可以收到最多1000条旧消息。多端也可以做到任意多的设备登陆收发消息。 为了防止离线消息数据包太大，因此必须注意减少消息的尺寸。图片消息内容或视频消息内容需要携带一张缩略图，缩略图的尺寸不能大于5K字节。大尺寸的消息内容要定义成媒体消息内容类型，先上传到媒体服务器，得到一个地址，再放到消息内容中。建议消息内容的大小不要大于5K。 2018 © wildfirechat.cn 京ICP备18060403号-1 all right reserved，powered by Gitbook该文件修订时间： 2018-10-14 17:32:50 "},"base_knowledge/group.html":{"url":"base_knowledge/group.html","title":"群组","keywords":"","body":"群组 群组功能上与微信和QQ的群组功能接近，发送到群里的消息每个群成员都可以收到。 群组通知 所有对群的写操作都会带有一个messagecontent参数，如果写操作服务器处理成功，会发送该消息到群里。 群组成员角色 普通成员/管理员/群主 群成员限制 架构上支持群成员人数无上限，但实际应用时会收到物理条件的限制。如果10000人的群，每秒钟发到群内100条消息，就将造成一百万的秒并发数，需要极高的性能配置和带宽。一般建议不要超过1000人每个群。 功能 功能 普通成员 群管理员 群主 创建群组 N/A N/A 创建者即为群主 修改群组名 NO YES YES 修改群头像 NO YES YES 修改群成员角色 NO NO YES 撤回群消息 NO YES（不能撤回群主和其它群管理员消息） YES 修改群成员名片 YES（仅能修改自己的） YES（不能修改群主和其它群管理员的名片） YES 转让群主 NO NO YES 解散群组 NO NO YES 退出群组 YES YES NO（先转让才能退出) 拉人进入群组 NO YES YES 移出群组 NO YES（不可移出其它管理员和群主) YES @部分群成员 YES YES YES @全部成员 NO YES YES 2018 © wildfirechat.cn 京ICP备18060403号-1 all right reserved，powered by Gitbook该文件修订时间： 2018-10-14 17:32:50 "},"base_knowledge/chatroom.html":{"url":"base_knowledge/chatroom.html","title":"聊天室","keywords":"","body":"聊天室 类似于群组，但成员构成更倾向于临时状态，用户可以进入聊天室收发消息，离开聊天室就不再收消息，聊天室消息在本地不存储，聊天室消息也没有推送。聊天室人数没有限制。 功能 功能 描述 创建聊天室 仅能通过服务器接口创建 加入聊天室 离开聊天室 获取聊天室信息 获取聊天室成员信息 聊天室控制功能没有加入，因为牵扯到很多业务场景，建议客户自己来实现，比如禁言和踢出等。 2018 © wildfirechat.cn 京ICP备18060403号-1 all right reserved，powered by Gitbook该文件修订时间： 2018-10-14 17:32:50 "},"server/":{"url":"server/","title":"服务器说明","keywords":"","body":"服务器说明 火信服务器是闭源的，但是社区版是开发免费下载的。社区版安装部署简单，能够满足大部分的需求。社区版与专业版只有2点区别：社区版只能单机部署，而专业版可以集群部署；社区版对Server API调用限频每10秒限制10次调用，专业版的限频为每10秒限制500次。其它所有功能都一样。另外对于toB客户，专业版提供更多的技术支持。火信作者对其他服务器不太熟悉，建议客户正式使用时使用linux服务，以便能更好的服务客户。 服务器的性能 火信具有非常高的性能，单机2C4G能支撑10W以上长链接，1000条/秒以上的消息发送压力。使用大量内存缓存能够极大地提高用户体验，建议每10W在线用户使用8C16G服务资源，如果您有一百万客户，就可以根据自己的业务特点估算最大的可能在线人数，部署对应的服务器资源即可。专业版拥有水平扩展和高可用能力，建议低配置多台部署，以便均匀地分散压力和做到有故障自动容错。 2018 © wildfirechat.cn 京ICP备18060403号-1 all right reserved，powered by Gitbook该文件修订时间： 2019-01-20 22:38:26 "},"server/server_port.html":{"url":"server/server_port.html","title":"服务器端口说明","keywords":"","body":"服务器端口说明 服务器使用了多个端口：1883用户tcp长链接，8083用于websocket长链接（暂未实现），80用户http连接。18080用于Server API使用。 火信的SDK基于微信mars，使用长短结合的办法最优化服务的连接处理。关于长短连接的详细信息可以参考mars的官方文档。 长链接 1883和8083都是长链接，运行火信的私有协议，火信的私有协议来源于对mqtt的二次开发。用于连接鉴权、发送消息、接收通知等。 短链接 80是http短连接端口，客户端指定的服务器地址，客户端其实会通过短连接端口获取到长连接端口。服务器需要开通80/1883/8083的入访权限。 Server API 18080是Server API的端口。server api用户创建用户，获取token，发送消息，撤回消息等一系列由其它服务操作的功能。 安全防护 长链接和IM短链接，用户发送协议包，协议包经过AES加密。mars直接在tcp层上实现的http协议，对于系统来说就是普通的tcp连接。iOS的ATS可以不用加例外。 Admin API是供应用服务进行调用的，接口有签名保护，可以不用https。建议和应用服务器放到同一网络中。 另外媒体文件的上传是在mars中进行，无法使用https。这里是有缺陷的，如果您需要对媒体文件进行安全防护，就需要自己上传媒体文件，然后调用SDK来发送文件。 综上，您需求确认您的媒体文件上传的安全性，如果要使用https，那就需要自己来上传。 2018 © wildfirechat.cn 京ICP备18060403号-1 all right reserved，powered by Gitbook该文件修订时间： 2019-01-20 22:58:47 "},"server/db_config.html":{"url":"server/db_config.html","title":"数据库配置","keywords":"","body":"服务器数据库配置 为了让用户快速体验，火信使用了嵌入式数据库h2 database，这样让用户可以不用安装配置数据库就能快速体验到火信的功能。但嵌入式数据库相对性能差，也无法做主从备份。建议客户在正式使用时使用mysql数据库。 mysql数据库版本 mysql7以上，支持utf8mb4. 建库建表 进入到sql目录，执行 ./initial_db.sh -u{user} -p{password}\" 修改服务配置 进入到config目录下，修改c3p0-config.xml，正确配置db地址，用户名和密码。 com.mysql.jdbc.Driver jdbc:mysql://localhost:3306/wfchat?useSSL=false&amp;serverTimezone=GMT&amp;allowPublicKeyRetrieval=true root xxxxxx 使用mysql 修改moquette.conf中的下面属性改为0。服务器不再使用内置数据库。 embed.db 0 注意事项 火信服务器使用大量的内存缓存，一般情况下，数据库的数据仅用来备份以备系统重启。如果数据库出现瓶颈，可以从这几项入手解决，提高火信服务器缓存使用减少db的读取次数，db单独部署，提高db服务器的性能，尤其是换SSD，优化默认配置等。 2018 © wildfirechat.cn 京ICP备18060403号-1 all right reserved，powered by Gitbook该文件修订时间： 2019-01-20 22:51:40 "},"server/server_memory.html":{"url":"server/server_memory.html","title":"机器内存的选择","keywords":"","body":"机器内存的选择 火信使用了hazelcast作为内存缓存。在内存越来越便宜的情况下，合理地使用缓存，会带来性能的大幅提升。火信针对不同的数据使用不同的缓存策略。 消息数据 消息对内存的占用 火信采用了先进的设计，对于消息只保存一条原始数据。也就是说1对1聊天和群聊每发一条消息，火信只保存一条消息。另外火信的消息尺寸比较小，对于图片视频语音都是作为媒体文件上传到媒体服务器，消息体内只保存一个url，消息使用pb格式存储，平均下来不会大于1K字节。 缓存的配置 消息数据会随着时间线性积累，而且旧的消息可能再也用不到，因此对于消息，火信的建议每个用户缓存最新100条7天以内消息。预估一下，假如每条消息1K，10W活跃用户，10W 100 1K = 10G。当用户接收消息缓存没有命中时，会从数据库加载该消息，不会丢失消息。修改配置config/hazelcast.xml, max-size修改为您的用户数*100 604800 LRU 10000000 10 io.moquette.persistence.MessageLoader 0 注：活跃用户数指7天以内登陆的用户数。 其它数据 其它数据比如用户，好友，群组，设置。基本与用户数成比例，每人不会超过30K数据，为了提高访问速度，因此全部放到内存缓存中。预计有10W活跃用户， 10W * 30K = 3G。 总结 如果您的用户需求较高且用户比较活跃，建议您每10W活跃用户配置16G内存。也可以适当降低缓存数减少内存消耗。 2018 © wildfirechat.cn 京ICP备18060403号-1 all right reserved，powered by Gitbook该文件修订时间： 2019-01-20 22:56:01 "},"server/benchmark.html":{"url":"server/benchmark.html","title":"性能测试","keywords":"","body":"性能测试（暂未完成） 修改最大文件打开数（ulimit），修改方法请用百度查。 单独部署db，并对配置进行优化。 下载jmeter3.3版本。把tools/jmeter/*.jar放到\\pathtojmeter\\lib\\ext。 使用jmeter打开tools/jmeter/目录下的连接数和发送消息脚本进行测试。注意进行连接数测试时需要使用jmeter集群模式，或者多台测试机器同时开始，以便能够达到理想的测试结果。 2018 © wildfirechat.cn 京ICP备18060403号-1 all right reserved，powered by Gitbook该文件修订时间： 2019-01-20 22:56:33 "},"server/server_config.html":{"url":"server/server_config.html","title":"服务器配置","keywords":"","body":"服务器配置 config 目录下放有所有服务器的配置，部署时需要对配置进行修改 1. 服务器的地址 把下面四个0替换成您的公网IP地址，并且开通这3个端口。端口要保持不变并开通公网访问，不要用其它端口！ server.ip 0.0.0.0 port 1883 http_port 80 websocket_port 8083 客户端需要设置服务器地址，请使用域名指向这个ip，然后使用http://${domain} 地址（当然如果没有域名直接使用ip也行）。如果您的域名为www.wildfirechat.cn，那么客户端的服务器地址为http://www.wildfirechat.cn。 由于mars的限制，请使用https站点（不用担心，都经过AES加密的）。 2.修改数据库 请参考数据库配置 3.修改服务器API密钥 把下面这个值换一个随机数，注意您调用这些接口的地方都要相应修改。 http.admin.secret_key 123456 4.修改客户端密钥 16个字节的随机数，注意同步修改客户端对应的密钥，不然连不上。 ##客户端协议栈密钥，需要与客户端协议栈文件libemqq.cc文件中的aes_key值保持一致，16进制byte用逗号分割 client.proto.secret_key 0x00,0x11,0x22,0x33,0x44,0x55,0x66,0x77,0x78,0x79,0x7A,0x7B,0x7C,0x7D,0x7E,0x7F 5.配置媒体服务器 请参考媒体服务器选择 6.推送配置 请参考推送说明 2018 © wildfirechat.cn 京ICP备18060403号-1 all right reserved，powered by Gitbook该文件修订时间： 2019-01-20 23:03:18 "},"server/admin_api/":{"url":"server/admin_api/","title":"Admin API接口","keywords":"","body":"Admin API接口 Admin API是供客户服务器调用的。所有的请求都是POST请求，请求body使用json格式。所有接口的调用都必须经过签名。所有的响应数据都是JSON格式。 签名规则 以下参数需要放在Http Request Header中 参数 参数说明 nonce 随机数 timestamp 当前的时间戳，为了防止重放攻击，时间戳与火信服务器时间戳差2个小时的请求会被拒绝 sign 签名 签名的计算方法： sign = sha1(nonce + \"|\" + SECRET_KEY + \"|\" + timestamp)。其中SECRET_KEY定义在moquette.conf中。为了安全一定要修改默认的SECRET_KEY。 Content-Type \"Content-Type\": \"application/json; charset=utf-8\" 响应 所有响应都是如下这个格式。成功时code为0，result为请求返回对于的数据；失败时code为错误码，msg为失败提示。 { \"code\":0, \"msg\":\"success\", \"result\":{ \"userId\":\"a\", \"imToken\":\"hN0AF2XX6+pOWqMS7iQiZnCFfGA53r1r\" } } 2018 © wildfirechat.cn 京ICP备18060403号-1 all right reserved，powered by Gitbook该文件修订时间： 2018-10-16 22:26:27 "},"server/admin_api/user_api.html":{"url":"server/admin_api/user_api.html","title":"用户","keywords":"","body":"用户 获取用户token 地址 http://domain/admin/user/token body 参数 类型 必需 描述 userId string 是 用户ID 响应 参数 类型 必需 描述 userId string 是 用户ID imToken string 是 用户token 示例 curl -X POST -H \"nonce:14723\" -H \"timestamp\":\"1539698981861\" -H \"sign\":\"9e9f98672f466a81e6dd61570689528cf38e6418\" -H \"Content-Type:application/json\" -d \"{\\\"userId\\\":\\\"a\\\"}\" http://localhost/admin/user/token { \"code\":0, \"msg\":\"success\", \"result\":{ \"userId\":\"a\", \"imToken\":\"hN0AF2XX6+pOWqMS7iQiZnCFfGA53r1r\" } } 注册/更新用户 地址 http://domain/admin/user/create body 参数 类型 必需 描述 userId string 否 用户ID，如果传空，系统会自动生成一个用户id name string 是 登陆名 password string 否 用户密码，可以为空，如果为空，用户不可以在火信服务器登陆 displayName string 是 显示名字 portrait string 否 用户头像 mobile string 否 用户手机号码 email string 否 用户邮箱 address string 否 用户地址 company string 否 用户公司 extra string 否 附加信息 响应 参数 类型 必需 描述 userId string 是 用户ID 示例 curl -X POST -H \"nonce:14723\" -H \"timestamp\":\"1539698981861\" -H \"sign\":\"9e9f98672f466a81e6dd61570689528cf38e6418\" -H \"Content-Type:application/json\" -d \"{\\\"name\\\":\\\"a\\\",\\\"displayName\\\":\\\"A\\\",\\\"password\\\":\\\"123456\\\"}\" http://localhost/admin/user/create { \"code\":0, \"msg\":\"success\", \"result\":{ \"userId\":\"a\", } } 获取用户信息 地址 http://domain/admin/user/info body 参数 类型 必需 描述 userId string 是 用户ID 响应 参数 类型 必需 描述 userId string 否 用户ID，如果传空，系统会自动生成一个用户id name string 是 登陆名 password string 否 用户密码，可以为空，如果为空，用户不可以在火信服务器登陆 displayName string 是 显示名字 portrait string 否 用户头像 mobile string 否 用户手机号码 email string 否 用户邮箱 address string 否 用户地址 company string 否 用户公司 extra string 否 附加信息 示例 curl -X POST -H \"nonce:14723\" -H \"timestamp\":\"1539698981861\" -H \"sign\":\"9e9f98672f466a81e6dd61570689528cf38e6418\" -H \"Content-Type:application/json\" -d \"{\\\"userId\\\":\\\"a\\\"}\" http://localhost/admin/user/get_token { \"code\":0, \"msg\":\"success\", \"result\":{ \"userId\":\"a\", \"imToken\":\"hN0AF2XX6+pOWqMS7iQiZnCFfGA53r1r\" } } 更新用户状态 封禁/禁言用户 地址 http://domain/admin/user/status body 参数 类型 必需 描述 userId string 是 用户ID status int 是 用户状态，0 正常；1 被禁言，2 被封禁 响应 N/A 示例 curl -X POST -H \"nonce:14723\" -H \"timestamp\":\"1539698981861\" -H \"sign\":\"9e9f98672f466a81e6dd61570689528cf38e6418\" -H \"Content-Type:application/json\" -d \"{\\\"userId\\\":\\\"a\\\", \\\"status\\\":1}\" http://localhost/admin/user/status { \"code\":0, \"msg\":\"success\" } 查询用户状态 地址 http://domain/admin/user/checkstatus body 参数 类型 必需 描述 userId string 是 用户ID 响应 参数 类型 必需 描述 status int 是 用户状态，0 正常；1 被禁言，2 被封禁 示例 curl -X POST -H \"nonce:14723\" -H \"timestamp\":\"1539698981861\" -H \"sign\":\"9e9f98672f466a81e6dd61570689528cf38e6418\" -H \"Content-Type:application/json\" -d \"{\\\"userId\\\":\\\"a\\\"}\" http://localhost/admin/user/checkstatus { \"code\":0, \"msg\":\"success\", \"result\":{ \"status\":0 } } 获取封禁/禁言用户列表 地址 http://domain/admin/user/statuslist body 参数 类型 必需 描述 userId string 是 用户ID 响应 参数 类型 必需 描述 userId string 是 用户ID imToken string 是 用户token 示例 curl -X POST -H \"nonce:14723\" -H \"timestamp\":\"1539698981861\" -H \"sign\":\"9e9f98672f466a81e6dd61570689528cf38e6418\" -H \"Content-Type:application/json\" -d \"{\\\"userId\\\":\\\"a\\\"}\" http://localhost/admin/user/statuslist { \"code\":0, \"msg\":\"success\", \"result\":[ { \"userId\":\"a\", \"status\":1, }, { \"userId\":\"b\", \"status\":2, }, { \"userId\":\"c\", \"status\":3, }, ] } 获取用户在线状态 地址 http://domain/admin/user/onlinestatus body 参数 类型 必需 描述 userId string 是 用户ID 响应 参数 类型 必需 描述 status int 是 0 online, 1 have session offline, 2 no session 示例 curl -X POST -H \"nonce:14723\" -H \"timestamp\":\"1539698981861\" -H \"sign\":\"9e9f98672f466a81e6dd61570689528cf38e6418\" -H \"Content-Type:application/json\" -d \"{\\\"userId\\\":\\\"a\\\"}\" http://localhost/admin/user/onlinestatus { \"code\":0, \"msg\":\"success\", \"result\":{ \"status\":0 } } 2018 © wildfirechat.cn 京ICP备18060403号-1 all right reserved，powered by Gitbook该文件修订时间： 2018-10-18 20:18:01 "},"server/admin_api/user_relation.html":{"url":"server/admin_api/user_relation.html","title":"用户关系","keywords":"","body":"用户关系 建立好友关系 解除好友关系 获取用户的好友列表 添加黑名单 移除黑名单 获取黑名单列表 2018 © wildfirechat.cn 京ICP备18060403号-1 all right reserved，powered by Gitbook该文件修订时间： 2018-10-15 21:48:37 "},"server/admin_api/message_api.html":{"url":"server/admin_api/message_api.html","title":"消息","keywords":"","body":"用户 发送消息 地址 http://domain/admin/message/send body 参数 类型 必需 描述 sender string 是 发送者ID conv json 是 会话 conv.type int 是 会话类型 conv.target string 是 会话目标 conv.line int 否 会话线路，缺省为0 payload json 是 消息负载 payload.type int 是 消息类型 payload.searchableContent string 否 消息可搜索内容 payload.pushContent string 否 消息推送内容 payload.content string 否 消息内容 payload.base64edData string 否 消息二进制内容，base64编码 payload.mediaType int 否 媒体消息类型 payload.remoteMediaUrl string 否 媒体内容链接 payload.expireDuration long 否 消息过期时间 payload.mentionedType int 否 消息提醒类型 payload.mentionedTarget string list 否 消息提醒对象列表 响应 参数 类型 必需 描述 messageUid long 是 消息唯一ID timestamp long 是 服务器处理时间 示例 curl -X POST -H \"nonce:14723\" -H \"timestamp\":\"1539698981861\" -H \"sign\":\"9e9f98672f466a81e6dd61570689528cf38e6418\" -H \"Content-Type:application/json\" -d \\ \"{ \\ \\\"sender\\\":\\\"a\\\", \\ \\\"conv\\\": { \\ \\\"type\\\":1, \\ \\\"target\\\":\\\"a\\\", \\ \\\"line\\\":0, \\ }, \\ \\\"payload\\\":{ \\ \\\"type\\\":1, \\ \\\"searchableContent\\\":\\\"hello\\\" \\ } \\ }\" \\ http://localhost/admin/message/send { \"code\":0, \"msg\":\"success\", \"result\":{ \"messageUid\":5323423532, \"timestamp\":13123423234324, } } 撤回消息 地址 http://domain/admin/message/recall body 参数 类型 必需 描述 operator string 是 撤回者 messageUid long 是 消息唯一ID 响应 N/A 示例 curl -X POST -H \"nonce:14723\" -H \"timestamp\":\"1539698981861\" -H \"sign\":\"9e9f98672f466a81e6dd61570689528cf38e6418\" -H \"Content-Type:application/json\" -d \"{\\\"operator\\\":\\\"a\\\",\\\"messageUid\\\":5323423532}\" http://localhost/admin/message/recall { \"code\":0, \"msg\":\"success\", } 2018 © wildfirechat.cn 京ICP备18060403号-1 all right reserved，powered by Gitbook该文件修订时间： 2018-10-19 15:27:11 "},"server/admin_api/group_api.html":{"url":"server/admin_api/group_api.html","title":"群组","keywords":"","body":"群组 创建群组 添加群组成员 移除群组成员 解散群组 获取群组信息 修改群组信息 获取群成员信息 转移群主 修改群名片 群组禁言 群组解除禁言 2018 © wildfirechat.cn 京ICP备18060403号-1 all right reserved，powered by Gitbook该文件修订时间： 2018-10-15 21:53:55 "},"server/admin_api/chatroom_api.html":{"url":"server/admin_api/chatroom_api.html","title":"聊天室","keywords":"","body":"聊天室 创建聊天室 销毁聊天室 撤回聊天室信息 获取聊天室封禁用户列表 聊天室封禁用户 聊天室解除封禁用户 获取聊天室成员 2018 © wildfirechat.cn 京ICP备18060403号-1 all right reserved，powered by Gitbook该文件修订时间： 2018-10-15 21:40:08 "},"server/admin_api/error_code.html":{"url":"server/admin_api/error_code.html","title":"code状态码","keywords":"","body":"code状态码 错误码 描述 对应处理 0 成功 n/a 1 服务器客户端密钥不匹配 检查客户端和服务器的密钥是否一致 2 无效的数据 数据解析错误，要么是PB出现了问题，要么是客户端与服务器的密钥不匹配 4 服务器出现未知错误 需要提交服务器日志给我们 5 数据未修改 一般是用来数据同步的，数据同步时会带有时间戳，这表示这个时间戳之后没有发送变化 6 token错误 使用了错误的token，检查token是否正确 8 用户被禁止 用户被禁止登陆 9 用户不在群组中 10 无效的消息内容 消息格式错误 11 群组已经存在 创建群组时，如果对应id已经存在 12 密码错误 16 已经发送过好友请求 7天之内已经发过好友请求了，不能再发送 18 已被对方拒绝好友请求 发送好友请求后，被拒绝，不能再此发送好友请求 19 好友请求已过期 当接受好友请求时，如果请求已经超过7天，则过期 20 不在聊天室 246 用户被拉黑 247 用户被全局禁言 248 没有权限操作 249 服务器超时 250 调用次数超频 服务器对用户级别进行限拼，1000次/秒。 251 无效的参数 参数不合法，需要检查参数 253 对象不存在 254 功能没有实现 上述这些errorcode既有与客户端交互的，也有server api交互的。 server api签名错误会返回http code 401. 其它的都返回http code 200. 限频是针对用户级别的。有些server api需要使用某个用户操作，会计算到这个用户上。 2018 © wildfirechat.cn 京ICP备18060403号-1 all right reserved，powered by Gitbook该文件修订时间： 2018-11-06 22:27:12 "},"server/event_callback.html":{"url":"server/event_callback.html","title":"事件回调","keywords":"","body":"事件回调 设置事件回调 用户在线状态回调 接收消息回调 群组成员变动回调 好友关系变动回调 用户信息变更回调 2018 © wildfirechat.cn 京ICP备18060403号-1 all right reserved，powered by Gitbook该文件修订时间： 2018-10-15 21:40:58 "},"server/push_config.html":{"url":"server/push_config.html","title":"推送证书设置","keywords":"","body":"推送证书设置 2018 © wildfirechat.cn 京ICP备18060403号-1 all right reserved，powered by Gitbook该文件修订时间： 2018-10-14 17:32:50 "},"server/media_server.html":{"url":"server/media_server.html","title":"媒体服务","keywords":"","body":"媒体服务 火信的消息分为普通消息和媒体消息。媒体消息一般比较大，发送时需要先上传媒体文件到媒体服务器，得到一个url地址，然后再把包含这个url地址的消息发出去。火信同时支持内置媒体服务器和七牛媒体服务器。客户端不用修改。 使用内置媒体服务器。 修改如下配置，media.server.use_qiniu配置为0，这样所有媒体文件都将上传到fs目录，按照日期和类型存放。 media.server.use_qiniu 0 local.media.storage.root ../fs 内置文件服务器不是一个商业化的媒体服务器，有很大的限制。受限于linux的inode数，文件不能太多，需要定时清理，另外媒体文件提交较大，没有cdn加速下载会很慢，强烈建议客户在正式商用时使用七牛媒体服务器。 七牛服务器 修改如下配置，media.server.use_qiniu配置为1，其它配置都需要配置正确。主要要区分长期保存的bucket和会清理的bucket。 media.server.use_qiniu 1 qiniu.server_url http://up.qbox.me qiniu.access_key tU3vdBK5BL5j4N7jI5N5uZgq_HQDo170w5C9Amnn qiniu.secret_key YfQIJdgp5YGhwEw14vGpaD2HJZsuJldWtqens7i5 qiniu.bucket_general_name media qiniu.bucket_general_domain http://pghnpyzos.bkt.clouddn.com qiniu.bucket_image_name media qiniu.bucket_image_domain http://pghnpyzos.bkt.clouddn.com qiniu.bucket_voice_name media qiniu.bucket_voice_domain http://pghnpyzos.bkt.clouddn.com qiniu.bucket_video_name media qiniu.bucket_video_domain http://pghnpyzos.bkt.clouddn.com qiniu.bucket_file_name media qiniu.bucket_file_domain http://pghnpyzos.bkt.clouddn.com qiniu.bucket_portrait_name media qiniu.bucket_portrait_domain http://pghnpyzos.bkt.clouddn.com qiniu.bucket_favorite_name media qiniu.bucket_favorite_domain http://pghnpyzos.bkt.clouddn.com 使用其它服务器 上述两种服务服务器的url中都带有32位的uuid，基本上不会被穷举。但生成的url没有访问控制，传输过程中也没有加密，因此如果客户需要传输非常敏感的媒体文件，请在客户端上传文件到自己的应用服务器，然后再调用sdk发送消息。 2018 © wildfirechat.cn 京ICP备18060403号-1 all right reserved，powered by Gitbook该文件修订时间： 2019-01-20 23:04:41 "},"server/server_clean.html":{"url":"server/server_clean.html","title":"服务的维护","keywords":"","body":"服务器的维护工作 任何资源都是有限的，服务器需要定时清理来释放不用的资源。 日志的清理 在config目录下的moquette-log.properties是日志配置文件，默认的配置是最多有5个日志循环备份，最大为10M。日志文件最多占用50M的空间，如果需要更多的日志，需要改动日志配置。 数据库的清理 消息是按照月份存储在36个message表只中，分别为t_message_${month}，可以按照月份来删除消息。 媒体文件的清理 媒体文件如果使用七牛，可以定时清理媒体消息内容的bucket，而头像和收藏等bucket要注意保留。 使用自带的媒体服务器，受限于inode的节点数，一定要注意不能接近inode的节点数，使用df -i命令查看。文件存储在fs目录下，目录为${type}/${year}/${month}/${day}/${hour}/${uuid}。其中type分别表示如下类型 Media_Type_GENERAL = 0, Media_Type_IMAGE = 1, Media_Type_VOICE = 2, Media_Type_VIDEO = 3, Media_Type_File = 4, Media_Type_PORTRAIT = 5, Media_Type_FAVORITE = 6 头像和收藏等bucket要注意保留。 2018 © wildfirechat.cn 京ICP备18060403号-1 all right reserved，powered by Gitbook该文件修订时间： 2019-01-20 23:06:29 "},"android/":{"url":"android/","title":"Android开发","keywords":"","body":"Android开发 2018 © wildfirechat.cn 京ICP备18060403号-1 all right reserved，powered by Gitbook该文件修订时间： 2018-10-14 17:32:50 "},"android/compile.html":{"url":"android/compile.html","title":"代码下载与编译","keywords":"","body":"代码下载与编译 2018 © wildfirechat.cn 京ICP备18060403号-1 all right reserved，powered by Gitbook该文件修订时间： 2018-10-14 17:32:50 "},"ios/":{"url":"ios/","title":"iOS开发","keywords":"","body":"iOS开发 2018 © wildfirechat.cn 京ICP备18060403号-1 all right reserved，powered by Gitbook该文件修订时间： 2018-10-14 17:32:50 "},"ios/compile.html":{"url":"ios/compile.html","title":"代码下与编译","keywords":"","body":"代码下与编译 2018 © wildfirechat.cn 京ICP备18060403号-1 all right reserved，powered by Gitbook该文件修订时间： 2018-10-14 17:32:50 "}}